// DOT ENV CONFIG
require('dotenv').config();



/////// USING CLOUDINARY
const cloudinary =require('cloudinary').v2;
const fileupload = require('express-fileupload');


cloudinary.config({ 
  cloud_name: process.env.CLOUDINARY_COUND_NAME, 
  api_key: process.env.CLOUDINARY_KEY, 
  api_secret: process.env.CLOUDINARY_API_SECRET,
});



 // EXPRESS CONNECTION
const express = require('express');
const app = express();
const cors = require('cors');
app.use(cors());
app.use(express.json());
const PORT = 5000;
app.listen(PORT, () =>{
    console.log(`Server is running on port ${PORT}`);
});
app.use(fileupload({
  useTempFiles:true
}))


////// MONGOOSE CONNECTION 
const mongoose = require('mongoose');

const dbUrl = process.env.DB_URL;

const connectionParams ={
    useNewUrlParser : true,
    useUnifiedTopology: true,
};
mongoose.connect(dbUrl, connectionParams)
.then(()=> {
console.log('Mongo Database Connected')
})

.catch((e) =>{
    console.log(e)
});

// ////// USING MULTER TO HANDLE THE IMAGE UPLOADING

// app.use('/static',express.static('assets/img_load_from_frntend'));

// const multer = require('multer');

// const path = require('path');

// const storage = multer.diskStorage({
//   destination: function (req, file, cb) {
//     cb(null, './assets/img_load_from_frntend')
//   },
//   filename: function (req, file, cb) {
//     cb(null, Date.now()+'  '+ file.originalname)
//   }
// });
// const upload = multer({ storage: storage });






/////// GET API 

const Entry = require('./models/inputDataSchema');

app.get('/entries', async (req, res) => {
    try {
      const entries = await Entry.find();
      // console.log('entries:', entries);
      res.json(entries);
    console.log("total entries are = ",entries.length);

    } catch (error) {
      console.log('Error:', error);
      res.status(500).json({ error: 'Internal Server Error' });
    }
  });


  app.get('/entries/count', async (req, res) => {
    try {
      const count = await Entry.countDocuments();
      res.status(200).json({ count });
    } catch (error) {
      console.error('Error:', error);
      res.status(500).json({ error: 'Internal Server Error' });
    }
  });
  


////// POST API

app.post('/entries', async (req, res) => {
  try {
    // console.log(req.body);
    const file = req.files.Car_Image;
    let entry; // Declare the entry variable

    cloudinary.uploader.upload(file.tempFilePath, (err, result) => {
      // console.log(result);
      entry = new Entry({
        Car_Name: req.body.Car_Name,
        Car_Modal: req.body.Car_Modal,
        Purchase_Year: req.body.Purchase_Year,
        Transmission: req.body.Transmission,
        Fuel_Type: req.body.Fuel_Type,
        Car_Image: result.url,
      });

      entry.save()
        .then((newEntry) => {
          console.log("New Entry Created", newEntry);
          res.status(201).json(newEntry);
        })
        .catch((error) => {
          console.error('Error Creating Entry:', error);
          res.status(500).json({ error: 'Internal Server Error' });
        });
    });
  } catch (error) {
    console.error('Error:', error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});


///// DELETION API 


app.delete('/entries/:id', async (req, res) => {
  try {
    const objectId = req.params.id;

    // Delete the object using the appropriate MongoDB function
    await Entry.deleteOne({ _id: objectId });

    res.status(200).json({ message: 'Object deleted successfully' });
  } catch (error) {
    console.error('Error deleting object:', error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});






// app.post('/entries', upload.single('Car_Image'), async (req, res) => {
//   try {

//     const { 
//       Car_Name,
//       Car_Modal,
//       Purchase_Year,
//       Transmission,
//       Fuel_Type,
//     } = req.body;

//     const imageData = req.file.filename;

//     // const imageData = {
//     //   file:req.file,
//     //   name: req.body,
//     //   url:'http://localhost:5000/static/${req.file.filename}'
//     // };

//     const newEntry = new Entry({
//       Car_Name,
//       Car_Modal,
//       Purchase_Year,
//       Transmission,
//       Fuel_Type,
//       Car_Image : imageData
//     });

//     await newEntry.save();

//     console.log("New Entry Created", newEntry);
//     res.status(201).json(newEntry);
//   }
//    catch (error) {
//     console.error('Error Creating Entry:', error);
//     res.status(500).json({ error: 'Internal Server Error' });
//   }
// });





  




